language: minimal

services:
  - docker

script:
  - docker build -t fin1ger/building-a-distributed-wamp-router:scenario-ram-usage-wamp ./scenarios/ram-usage/wamp
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push fin1ger/building-a-distributed-wamp-router:scenario-ram-usage-wamp

  - docker build -t fin1ger/building-a-distributed-wamp-router:scenario-ram-usage-mqtt ./scenarios/ram-usage/mqtt
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push fin1ger/building-a-distributed-wamp-router:scenario-ram-usage-mqtt

  - docker build -t fin1ger/building-a-distributed-wamp-router:scenario-high-load-wamp ./scenarios/high-load/wamp
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push fin1ger/building-a-distributed-wamp-router:scenario-high-load-wamp

  - docker build -t fin1ger/building-a-distributed-wamp-router:scenario-high-load-mqtt ./scenarios/high-load/mqtt
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push fin1ger/building-a-distributed-wamp-router:scenario-high-load-mqtt

  - docker build -t fin1ger/building-a-distributed-wamp-router:scenario-scaling-out-wamp ./scenarios/scaling-out/wamp
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push fin1ger/building-a-distributed-wamp-router:scenario-scaling-out-wamp

  - docker build -t fin1ger/building-a-distributed-wamp-router:scenario-scaling-out-mqtt ./scenarios/scaling-out/mqtt
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push fin1ger/building-a-distributed-wamp-router:scenario-scaling-out-mqtt

  - docker run -it --rm -v "$(pwd):/data" aergus/latex /bin/bash -c "cd /data/paper && make pdf"

  - "docker run -it --rm -v \"$(pwd):/data\" node:alpine /bin/ash -c \"
    apk add --no-cache \
      chromium \
      nss \
      freetype \
      freetype-dev \
      harfbuzz \
      ca-certificates \
      ttf-freefont \

    export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true

    npm install -g reveal-md

    sed -i \\\"s/format: 'A4'/width: 1920, height: 1080/g\\\" \
      /usr/local/lib/node_modules/reveal-md/lib/print.js

    cd /data/presentation

    mkdir -p build

    reveal-md --css css/fork-awesome.min.css,css/ovgu-cs.css slides.md \
      --print build/slides.pdf \
      --puppeteer-chromium-executable /usr/bin/chromium-browser \
      --puppeteer-launch-args='--no-sandbox --disable-dev-shm-usage'
    \""

before_deploy:
  - git tag -f travis-dev-build
  - git remote add gh https://${TRAVIS_REPO_SLUG%/*}:${GITHUB_API_KEY}@github.com/${TRAVIS_REPO_SLUG}.git
  - git push -f gh travis-dev-build
  - git remote remove gh

deploy:
  provider: releases
  api-key: $GITHUB_API_KEY
  file:
    - paper/build/paper.pdf
    - presentation/build/slides.pdf
  skip_cleanup: true
  name: latest paper build
  prerelease: true
  overwrite: true
  target_commitish: $TRAVIS_COMMIT
  on:
    branch: master
